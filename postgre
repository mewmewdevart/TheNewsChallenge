Aqui estÃ¡ uma lista de comandos Ãºteis para interagir com o PostgreSQL (`psql`) de forma simples. Esses comandos ajudarÃ£o vocÃª a gerenciar e inspecionar o banco de dados `newsletter_streaks` no Render.

---

### 1. **Conectar ao Banco de Dados**
Use o comando abaixo para se conectar ao banco de dados:

```bash
psql "postgresql://newsletter_streaks_user:pLc3Z2v9WWcZ3B0ifVSwbRDRm2Vjz0vG@dpg-cup2nsdsvqrc73etrrs0-a.oregon-postgres.render.com/newsletter_streaks"
```

---

### 2. **Comandos BÃ¡sicos do `psql`**
Depois de conectado, vocÃª pode usar os seguintes comandos:

#### a) **Listar Todas as Tabelas**
Para ver todas as tabelas no banco de dados atual:

```sql
\dt
```

#### b) **Descrever uma Tabela**
Para ver a estrutura de uma tabela especÃ­fica (por exemplo, `newsletter_read`):

```sql
\d newsletter_read
```

#### c) **Listar Bancos de Dados DisponÃ­veis**
Para listar todos os bancos de dados no servidor PostgreSQL:

```sql
\l
```

#### d) **Trocar de Banco de Dados**
Para trocar para outro banco de dados (substitua `nome_do_banco` pelo nome do banco desejado):

```sql
\c nome_do_banco
```

#### e) **Executar uma Consulta SQL**
Para executar uma consulta SQL, como selecionar todos os registros da tabela `newsletter_read`:

```sql
SELECT * FROM newsletter_read;
```

#### f) **Contar Registros em uma Tabela**
Para contar quantos registros existem em uma tabela:

```sql
SELECT COUNT(*) FROM newsletter_read;
```

#### g) **Sair do `psql`**
Para sair do terminal `psql`:

```sql
\q
```

---

### 3. **Comandos AvanÃ§ados**

#### a) **Inserir Dados em uma Tabela**
Para inserir um novo registro na tabela `newsletter_read`:

```sql
INSERT INTO newsletter_read (email, post_id, utm_source, utm_medium, utm_campaign, utm_channel, streak)
VALUES ('exemplo@email.com', 'post_123', 'source', 'medium', 'campaign', 'channel', 1);
```

#### b) **Atualizar Dados em uma Tabela**
Para atualizar um registro existente:

```sql
UPDATE newsletter_read
SET streak = 2
WHERE email = 'exemplo@email.com';
```

#### c) **Excluir Dados de uma Tabela**
Para excluir um registro:

```sql
DELETE FROM newsletter_read
WHERE email = 'exemplo@email.com';
```

#### d) **Criar uma Nova Tabela**
Para criar uma nova tabela:

```sql
CREATE TABLE nova_tabela (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
```

#### e) **Excluir uma Tabela**
Para excluir uma tabela (CUIDADO!):

```sql
DROP TABLE nova_tabela;
```

---

### 4. **Comandos de Gerenciamento de UsuÃ¡rios e PermissÃµes**

#### a) **Listar UsuÃ¡rios**
Para listar todos os usuÃ¡rios do PostgreSQL:

```sql
\du
```

#### b) **Criar um Novo UsuÃ¡rio**
Para criar um novo usuÃ¡rio:

```sql
CREATE USER novo_usuario WITH PASSWORD 'senha_segura';
```

#### c) **Conceder PermissÃµes a um UsuÃ¡rio**
Para conceder permissÃµes a um usuÃ¡rio em um banco de dados:

```sql
GRANT ALL PRIVILEGES ON DATABASE newsletter_streaks TO novo_usuario;
```

#### d) **Revogar PermissÃµes de um UsuÃ¡rio**
Para revogar permissÃµes:

```sql
REVOKE ALL PRIVILEGES ON DATABASE newsletter_streaks FROM novo_usuario;
```

---

### 5. **Comandos de Backup e RestauraÃ§Ã£o**

#### a) **Fazer Backup de um Banco de Dados**
Para fazer um backup do banco de dados `newsletter_streaks`:

```bash
pg_dump "postgresql://newsletter_streaks_user:pLc3Z2v9WWcZ3B0ifVSwbRDRm2Vjz0vG@dpg-cup2nsdsvqrc73etrrs0-a.oregon-postgres.render.com/newsletter_streaks" > backup.sql
```

#### b) **Restaurar um Banco de Dados**
Para restaurar um banco de dados a partir de um backup:

```bash
psql "postgresql://newsletter_streaks_user:pLc3Z2v9WWcZ3B0ifVSwbRDRm2Vjz0vG@dpg-cup2nsdsvqrc73etrrs0-a.oregon-postgres.render.com/newsletter_streaks" < backup.sql
```

---

### 6. **Comandos Ãšteis para DepuraÃ§Ã£o**

#### a) **Verificar ConexÃµes Ativas**
Para verificar conexÃµes ativas no banco de dados:

```sql
SELECT * FROM pg_stat_activity;
```

#### b) **Cancelar uma Consulta em ExecuÃ§Ã£o**
Para cancelar uma consulta em execuÃ§Ã£o (substitua `pid` pelo ID do processo):

```sql
SELECT pg_cancel_backend(pid);
```

#### c) **Terminar uma ConexÃ£o**
Para terminar uma conexÃ£o (substitua `pid` pelo ID do processo):

```sql
SELECT pg_terminate_backend(pid);
```

---

### 7. **Comandos de Ajuda**
Para obter ajuda sobre comandos do `psql`:

```sql
\?
```

Para obter ajuda sobre comandos SQL:

```sql
\h
```

---

### Resumo
Esses comandos cobrem desde operaÃ§Ãµes bÃ¡sicas atÃ© avanÃ§adas no PostgreSQL. Eles sÃ£o Ãºteis para gerenciar, inspecionar e depurar o banco de dados `newsletter_streaks` no Render. Se precisar de mais ajuda, use `\?` ou `\h` dentro do `psql` para obter mais informaÃ§Ãµes. ðŸš€